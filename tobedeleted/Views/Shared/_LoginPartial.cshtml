@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
    <head>
        <style>
            .avatar {
                height: 40px;
                width: 40px;
                object-fit: cover;
            }
        </style>
    </head>
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
        {
            <li class="nav-item">
               <img class="avatar rounded-circle" alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))"/>
            </li>
        }



        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><span class="d-none d-lg-inline">Hello @UserManager.GetUserAsync(User).Result.firstName   @UserManager.GetUserAsync(User).Result.lastName!</span></a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark btn-outline-primary" asp-area="Identity" asp-page="/Account/Register">Sign-up</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark btn-outline-primary" asp-area="Identity" asp-page="/Account/Login">Sign-in</a>
        </li>
    }
</ul>
